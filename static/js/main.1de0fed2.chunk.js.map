{"version":3,"sources":["reducers/moviesReducer.js","reducers/rootReducer.js","constants.js","api.js","components/MovieList/MovieCard.js","components/Preloader/Preloader.js","components/Error.js","components/MovieList/MovieList.js","components/MovieList/PopularMovies.js","actions/moviesActions.js","components/MovieList/SimilarMovies.js","components/NoMatchPage.js","components/MainComponent.js","App.js","serviceWorker.js","index.js","dist/video/preloader.mp4"],"names":["initialState","movies","combineReducers","moviesReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","heroku","apiKey","api","getPopular","axios","get","concat","getSimilar","data","id","MovieCard","_ref","classes","movie_id","title","img","lang","vote","react_default","a","createElement","react_router_dom","to","onClick","e","preventDefault","Card_default","className","card","CardActionArea_default","CardMedia_default","component","alt","media","image","CardContent_default","Typography_default","gutterBottom","variant","defaultProps","withStyles","maxWidth","height","objectFit","Preloader","autoPlay","loop","muted","playsInline","src","preloader","refreshPage","window","location","reload","Error","Grid_default","container","spacing","alignItems","justify","style","minHeight","Button_default","color","Error_default","MovieList","loading","error","goBack","react","components_Preloader_Preloader","components_Error","button","ArrowLeft_default","backIcon","item","xs","map","elem","key","MovieList_MovieCard","poster_path","original_language","vote_average","PopularMovies","getPopularMovies","_useState","useState","_useState2","slicedToArray","setError","_useState3","_useState4","setLoading","useEffect","then","res","status","catch","console","components_MovieList_MovieList","history","match","getSimilarMovies","connect","results","dispatch","root","flexGrow","SimilarMovies","params","withRouter","theme","margin","unit","marginLeft","Info_default","MainComponent","AppBar_default","position","appBar","Toolbar_default","react_router","exact","path","NoMatchPage","marginBottom","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","App","es","basename","components_MainComponent","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1de0fed2.chunk.js","sourcesContent":["import { GET_POPULAR_MOVIES, GET_SIMILAR_MOVIES } from '../constants';\n\nconst initialState = {\n  movies: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POPULAR_MOVIES:\n      return {\n        ...state,\n        movies: action.payload\n      };\n    case GET_SIMILAR_MOVIES:\n      return {\n        ...state,\n        movies: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport moviesReducer from './moviesReducer';\n\nexport default combineReducers({\n  moviesReducer\n});\n","export const GET_POPULAR_MOVIES = 'GET_POPULAR_MOVIES';\nexport const GET_SIMILAR_MOVIES = 'GET_SIMILAR_MOVIES';","import axios from 'axios';\n\nconst heroku = 'https://cors-anywhere.herokuapp.com/';\nconst apiKey = 'e30307c056887eab161000975740e1ce';\n\nexport default {\n  movies: {\n    getPopular: () =>\n      axios.get(\n        `${heroku}https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\n      ),\n    getSimilar: data =>\n      axios.get(\n        `${heroku}https://api.themoviedb.org/3/movie/${\n          data.id\n        }/similar?api_key=${apiKey}&language=en-US&page=1`\n      )\n  }\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  card: {\n    maxWidth: 400,\n    height: '100%'\n  },\n  media: {\n    objectFit: 'cover'\n  }\n};\n\nconst defaultProps = {\n  classes: {},\n  movie_id: 0,\n  vote: 0,\n  title: '',\n  img: '',\n  lang: '',\n  type: ''\n};\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired,\n  movie_id: PropTypes.number.isRequired,\n  vote: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  lang: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nconst MovieCard = ({ classes, movie_id, title, img, lang, vote, type }) => {\n  const handleClick = e => {\n    if (type === 'similar') {\n      e.preventDefault();\n    }\n  };\n  return (\n    <NavLink to={`/similar/${movie_id}`} onClick={handleClick}>\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt={title}\n            className={classes.media}\n            image={`https://image.tmdb.org/t/p/w400${img}`}\n            title={title}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography component=\"p\">Language: {lang}</Typography>\n            {/* didn`t found an country of origin field, in return used vote_average */}\n            <Typography component=\"p\">Avarage vote: {vote}</Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </NavLink>\n  );\n};\n\nMovieCard.defaultProps = defaultProps;\nMovieCard.propTypes = propTypes;\n\nexport default withStyles(styles)(MovieCard);\n","import React from 'react';\nimport preloader from '../../dist/video/preloader.mp4';\nimport './Preloader.css';\n\nconst Preloader = () => (\n  <div className='preloader'>\n    <video autoPlay loop muted playsInline>\n      <source src={preloader} type=\"video/mp4\" />\n    </video>\n  </div>\n);\n\nexport default Preloader;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Button from '@material-ui/core/Button';\n\nconst refreshPage = () => {\n  window.location.reload();\n};\n\nconst Error = () => (\n  <Grid\n    container\n    spacing={0}\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n    <Button variant=\"contained\" color=\"secondary\" onClick={refreshPage}>\n      <ErrorIcon /> Something was wrong. Please refresh the page.\n    </Button>\n  </Grid>\n);\n\nexport default Error;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\n\nimport MovieCard from './MovieCard';\nimport Preloader from '../Preloader/Preloader';\nimport Error from '../Error';\n\nconst defaultProps = {\n  loading: false,\n  error: false,\n  goBack: () => {},\n  classes: {},\n  movies: [],\n  type: ''\n};\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired,\n  movies: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired,\n  goBack: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nconst MovieList = ({ loading, error, classes, goBack, movies, type }) => {\n  return (\n    <Fragment>\n      {loading ? (\n        <Preloader />\n      ) : (\n        <Fragment>\n          {error && <Error />}\n          <Fragment>\n            {type === 'similar' && (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={goBack}\n              >\n                <ArrowLeft className={classes.backIcon} />\n                Back\n              </Button>\n            )}\n            <Grid container>\n              <Grid item xs={12}>\n                <Grid container justify=\"center\">\n                  {movies.map(elem => (\n                    <Grid key={`card${elem.id}`} item>\n                      <MovieCard\n                        movie_id={elem.id}\n                        title={elem.title}\n                        img={elem.poster_path}\n                        lang={elem.original_language}\n                        vote={elem.vote_average}\n                        type={type}\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Fragment>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nMovieList.defaultProps = defaultProps;\nMovieList.propTypes = propTypes;\n\nexport default MovieList;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getPopularMovies } from '../../actions/moviesActions';\nimport MovieList from './MovieList';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1\n  }\n});\n\nconst defaultProps = {\n  classes: {},\n  movies: [],\n  history: {},\n  match: {},\n  getSimilarMovies: () => {}\n};\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired,\n  movies: PropTypes.array.isRequired,\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  getSimilarMovies: PropTypes.func.isRequired\n};\n\nconst PopularMovies = ({ movies, getPopularMovies }) => {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getPopularMovies()\n      .then(res => {\n        if (res.status === 200) {\n          setLoading(false);\n        } else {\n          setLoading(false);\n          setError(true);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [getPopularMovies]);\n\n  return (\n    <MovieList loading={loading} error={error} movies={movies} type=\"popular\" />\n  );\n};\n\nPopularMovies.defaultProps = defaultProps;\nPopularMovies.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.moviesReducer.movies.results\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getPopularMovies }\n)(withStyles(styles)(PopularMovies));\n","import api from '../api';\nimport { GET_POPULAR_MOVIES, GET_SIMILAR_MOVIES } from '../constants';\n\nexport const getPopularMovies = data => dispatch =>\n    api.movies.getPopular(data).then(res => {\n      if (res.status === 200) {\n        dispatch({\n          type: GET_POPULAR_MOVIES,\n          payload: res.data\n        });\n      }\n      return res;\n    }),\n  getSimilarMovies = data => dispatch =>\n    api.movies.getSimilar(data).then(res => {\n      if (res.status === 200) {\n        dispatch({\n          type: GET_SIMILAR_MOVIES,\n          payload: res.data\n        });\n      }\n      return res;\n    });\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getSimilarMovies } from '../../actions/moviesActions';\nimport MovieList from './MovieList';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  backIcon: {\n    marginLeft: theme.spacing.unit\n  }\n});\n\nconst defaultProps = {\n  classes: {},\n  movies: [],\n  history: {},\n  match: {},\n  getSimilarMovies: () => {}\n};\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired,\n  movies: PropTypes.array.isRequired,\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  getSimilarMovies: PropTypes.func.isRequired\n};\n\nconst SimilarMovies = ({\n  classes,\n  movies,\n  history,\n  match,\n  getSimilarMovies\n}) => {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getSimilarMovies({ id: match.params.id })\n      .then(res => {\n        if (res.status === 200) {\n          setLoading(false);\n        } else {\n          setLoading(false);\n          setError(true);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [getSimilarMovies, match]);\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <MovieList\n      loading={loading}\n      error={error}\n      classes={classes}\n      goBack={goBack}\n      movies={movies}\n      type={'similar'}\n    />\n  );\n};\n\nSimilarMovies.defaultProps = defaultProps;\nSimilarMovies.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.moviesReducer.movies.results\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { getSimilarMovies }\n  )(withStyles(styles)(SimilarMovies))\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Button from '@material-ui/core/Button';\n\nconst Error = () => (\n  <Grid\n    container\n    spacing={0}\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n    <NavLink to=\"/\">\n      <Button variant=\"contained\" color=\"primary\">\n        <InfoIcon /> Sorry, the page you are looking for could not be found.\n      </Button>\n    </NavLink>\n  </Grid>\n);\n\nexport default Error;\n","import React, { Fragment } from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport PopularMovies from './MovieList/PopularMovies';\nimport SimilarMovies from './MovieList/SimilarMovies';\nimport NoMatchPage from './NoMatchPage';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = () => ({\n  appBar: {\n    marginBottom: '30px'\n  }\n});\n\nconst defaultProps = {\n  classes: {}\n};\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst MainComponent = ({ classes }) => {\n  return (\n    <Fragment>\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            <NavLink to=\"/\">Movie List</NavLink>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route exact path=\"/\" component={PopularMovies} />\n        <Route path=\"/similar/:id\" component={SimilarMovies} />\n        <Route component={NoMatchPage} />\n      </Switch>\n    </Fragment>\n  );\n};\n\nMainComponent.defaultProps = defaultProps;\nMainComponent.propTypes = propTypes;\n\nexport default withStyles(styles)(MainComponent);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './App.css';\nimport rootReducer from './reducers/rootReducer';\nimport MainComponent from './components/MainComponent';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"/MovieList\">\n        <MainComponent />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/preloader.3c97d81a.mp4\";"],"sourceRoot":""}